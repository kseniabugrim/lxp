{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dev/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/WEB/lxp/lxp-test/lxp/src/Components/Courses/Courses.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport classes from './Courses.module.css';\nimport CourseItemView from './CourseItemView/CourseItemView';\n\nconst Courses = props => {\n  _s();\n\n  const [all, setAll] = useState(false);\n  const [completed, setCompleted] = useState(true);\n  const [inProgress, setInProgress] = useState(true);\n  const [notStarted, setNotStarted] = useState(false);\n  let courses = props.courses.map(item => {\n    return /*#__PURE__*/_jsxDEV(CourseItemView, {\n      item: item\n    }, item.courseId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.coursesHeader,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.coursesHeaderContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CyberSecurity Awareness Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.filters,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.filter,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.filterText,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                setAll(!all);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.checkmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.filter,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.filterText,\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                setCompleted(!completed);\n              },\n              checked: completed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.checkmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.filter,\n            children: [/*#__PURE__*/_jsxDEV(\"snap\", {\n              className: classes.filterText,\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                setInProgress(!inProgress);\n              },\n              checked: inProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.checkmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.filter,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.filterText,\n              children: \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                setNotStarted(!notStarted);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.checkmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.itemsList,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.containerItems,\n        children: courses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Courses, \"ROkon5E1jSbT++NvKv7xPqUw6r0=\");\n\n_c = Courses;\nexport default Courses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"sources":["/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Courses/Courses.jsx"],"names":["React","useEffect","useState","classes","CourseItemView","Courses","props","all","setAll","completed","setCompleted","inProgress","setInProgress","notStarted","setNotStarted","courses","map","item","courseId","main","coursesHeader","coursesHeaderContainer","filters","filter","filterText","checkmark","itemsList","containerItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport classes from './Courses.module.css';\nimport CourseItemView from './CourseItemView/CourseItemView';\n\nconst Courses = (props) => {\n    const [all, setAll] = useState(false);\n    const [completed, setCompleted] = useState(true);\n    const [inProgress, setInProgress] = useState(true);\n    const [notStarted, setNotStarted] = useState(false);\n\n    let courses = props.courses.map(item => {\n        return <CourseItemView item={item} key={item.courseId}/>\n    })\n\n    return(\n        <div className={classes.main}>\n            <div className={classes.coursesHeader}>\n                <div className={classes.coursesHeaderContainer}>\n                    <h1>CyberSecurity Awareness Courses</h1>\n                    <div className={classes.filters}>\n                        <label className={classes.filter}>\n                            <span className={classes.filterText}>All</span>\n                            <input type=\"checkbox\" onChange={()=>{setAll(!all)}}/>\n                            <span className={classes.checkmark}></span>\n                        </label>\n                        <label className={classes.filter}>\n                            <span className={classes.filterText}>Completed</span>\n                            <input type=\"checkbox\" onChange={()=>{setCompleted(!completed)}} checked={completed}/>\n                            <span className={classes.checkmark}></span>\n                        </label>\n                        <label className={classes.filter}>\n                            <snap className={classes.filterText}>In Progress</snap>\n                            <input type=\"checkbox\" onChange={()=>{setInProgress(!inProgress)}} checked={inProgress}/>\n                            <span className={classes.checkmark}></span>\n                        </label>\n                        <label className={classes.filter}>\n                            <span className={classes.filterText}>Not Started</span>\n                            <input type=\"checkbox\" onChange={()=>{setNotStarted(!notStarted)}}/>\n                            <span className={classes.checkmark}></span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.itemsList}>\n                <div className={classes.containerItems}>\n                    {courses}\n                </div>  \n            </div>\n        </div>\n    );\n}\n\nexport default Courses;"]},"metadata":{},"sourceType":"module"}