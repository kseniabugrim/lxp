{"ast":null,"code":"import { userApi } from \"../Api/api\";\nimport { setIsFetching } from \"./commonReducer\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_IS_AUTH = 'SET_IS_AUTH';\nlet initialState = {\n  user: [],\n  isAuth: false\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          user: action.user\n        };\n      }\n\n    case SET_IS_AUTH:\n      {\n        return { ...state,\n          isAuth: action.isAuth\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = user => ({\n  type: SET_USER_DATA,\n  user\n});\nexport const setIsAuth = isAuth => ({\n  type: SET_IS_AUTH,\n  isAuth\n});\nexport const login = (email, password) => async dispatch => {\n  dispatch(setIsFetching(true));\n\n  try {\n    let response = await userApi.login(email, password);\n    localStorage.setItem('usertoken', response.token);\n    console.log(response);\n    dispatch([setUserData(response.user), setIsAuth(true), setIsFetching(false)]);\n  } catch (err) {\n    dispatch(setIsFetching(false));\n  }\n};\nexport const getProfile = token => async dispatch => {};\nexport default userReducer;","map":{"version":3,"sources":["/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/userReducer.js"],"names":["userApi","setIsFetching","SET_USER_DATA","SET_IS_AUTH","initialState","user","isAuth","userReducer","state","action","type","setUserData","setIsAuth","login","email","password","dispatch","response","localStorage","setItem","token","console","log","err","getProfile"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE,EADS;AAEfC,EAAAA,MAAM,EAAE;AAFO,CAAnB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,aAAL;AAAoB;AAChB,eAAO,EAAE,GAAGM,KAAL;AAAYH,UAAAA,IAAI,EAAEI,MAAM,CAACJ;AAAzB,SAAP;AACH;;AACD,SAAKF,WAAL;AAAkB;AACd,eAAO,EAAE,GAAGK,KAAL;AAAYF,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAA3B,SAAP;AACH;;AACD;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAaA,OAAO,MAAMG,WAAW,GAAIN,IAAD,KAAW;AAClCK,EAAAA,IAAI,EAAER,aAD4B;AACbG,EAAAA;AADa,CAAX,CAApB;AAIP,OAAO,MAAMO,SAAS,GAAIN,MAAD,KAAa;AAClCI,EAAAA,IAAI,EAAEP,WAD4B;AACfG,EAAAA;AADe,CAAb,CAAlB;AAIP,OAAO,MAAMO,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC1DA,EAAAA,QAAQ,CAACf,aAAa,CAAC,IAAD,CAAd,CAAR;;AACA,MAAG;AACC,QAAIgB,QAAQ,GAAG,MAAMjB,OAAO,CAACa,KAAR,CAAcC,KAAd,EAAqBC,QAArB,CAArB;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,QAAQ,CAACG,KAA3C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAD,IAAAA,QAAQ,CAAC,CAACL,WAAW,CAACM,QAAQ,CAACZ,IAAV,CAAZ,EAA6BO,SAAS,CAAC,IAAD,CAAtC,EAA8CX,aAAa,CAAC,KAAD,CAA3D,CAAD,CAAR;AACH,GALD,CAKC,OAAMsB,GAAN,EAAU;AACPP,IAAAA,QAAQ,CAACf,aAAa,CAAC,KAAD,CAAd,CAAR;AACH;AACJ,CAVM;AAYP,OAAO,MAAMuB,UAAU,GAAIJ,KAAD,IAAW,MAAOJ,QAAP,IAAoB,CAExD,CAFM;AAKP,eAAeT,WAAf","sourcesContent":["import { userApi } from \"../Api/api\";\nimport { setIsFetching } from \"./commonReducer\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_IS_AUTH = 'SET_IS_AUTH';\n\nlet initialState = {\n    user: [],\n    isAuth: false\n}\n\nconst userReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_USER_DATA: {\n            return { ...state, user: action.user }\n        }\n        case SET_IS_AUTH: {\n            return { ...state, isAuth: action.isAuth }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const setUserData = (user) => ({\n    type: SET_USER_DATA, user\n});\n\nexport const setIsAuth = (isAuth) => ({\n    type: SET_IS_AUTH, isAuth\n});\n\nexport const login = (email, password) => async (dispatch) => {\n    dispatch(setIsFetching(true));\n    try{\n        let response = await userApi.login(email, password);\n        localStorage.setItem('usertoken', response.token);\n        console.log(response);\n        dispatch([setUserData(response.user), setIsAuth(true), setIsFetching(false)]);\n    }catch(err){\n        dispatch(setIsFetching(false));\n    }\n}\n\nexport const getProfile = (token) => async (dispatch) => {\n    \n}\n\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}