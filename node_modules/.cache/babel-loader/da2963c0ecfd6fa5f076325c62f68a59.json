{"ast":null,"code":"import { activitiesApi } from \"../Api/api\";\nimport { setIsFetching } from \"./commonReducer\";\nconst SET_CURRENT_ACTIVITY = 'SET_CURRENT_ACTIVITY';\nconst SET_ACTIVITIES_DATA = 'SET_ACTIVITIES_DATA';\nlet initialState = {\n  activities: [],\n  currentActivity: null\n};\n\nconst activitiesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_ACTIVITY:\n      {\n        return { ...state,\n          currentActivity: action.currentActivity\n        };\n      }\n\n    case SET_ACTIVITIES_DATA:\n      {\n        return { ...state,\n          activities: action.activities\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setCurrentActivity = currentActivity => ({\n  type: SET_CURRENT_ACTIVITY,\n  currentActivity\n});\nexport const setActivitiesData = activities => ({\n  type: SET_ACTIVITIES_DATA,\n  activities\n});\nexport const getActivities = (employeeId, userId, organizationId) => async dispatch => {\n  dispatch(setIsFetching(true));\n\n  try {\n    let response = await activitiesApi.getActivities(employeeId, userId, organizationId);\n    console.log(response);\n    dispatch([setIsFetching(false)]);\n  } catch (err) {\n    dispatch(setIsFetching(false));\n  }\n};\nexport default activitiesReducer;","map":{"version":3,"sources":["/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Redux/activitiesReducer.js"],"names":["activitiesApi","setIsFetching","SET_CURRENT_ACTIVITY","SET_ACTIVITIES_DATA","initialState","activities","currentActivity","activitiesReducer","state","action","type","setCurrentActivity","setActivitiesData","getActivities","employeeId","userId","organizationId","dispatch","response","console","log","err"],"mappings":"AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,UAAU,EAAE,EADG;AAEfC,EAAAA,eAAe,EAAE;AAFF,CAAnB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACxD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,oBAAL;AAA2B;AACvB,eAAO,EAAE,GAAGM,KAAL;AAAYF,UAAAA,eAAe,EAAEG,MAAM,CAACH;AAApC,SAAP;AACH;;AACD,SAAKH,mBAAL;AAA0B;AACtB,eAAO,EAAE,GAAGK,KAAL;AAAYH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAA/B,SAAP;AACH;;AACD;AACI,aAAOG,KAAP;AARR;AAUH,CAXD;;AAaA,OAAO,MAAMG,kBAAkB,GAAIL,eAAD,KAAsB;AACpDI,EAAAA,IAAI,EAAER,oBAD8C;AACxBI,EAAAA;AADwB,CAAtB,CAA3B;AAGP,OAAO,MAAMM,iBAAiB,GAAIP,UAAD,KAAiB;AAC9CK,EAAAA,IAAI,EAAEP,mBADwC;AACnBE,EAAAA;AADmB,CAAjB,CAA1B;AAIP,OAAO,MAAMQ,aAAa,GAAG,CAACC,UAAD,EAAaC,MAAb,EAAqBC,cAArB,KAAwC,MAAOC,QAAP,IAAoB;AACrFA,EAAAA,QAAQ,CAAChB,aAAa,CAAC,IAAD,CAAd,CAAR;;AACA,MAAG;AACC,QAAIiB,QAAQ,GAAG,MAAMlB,aAAa,CAACa,aAAd,CAA4BC,UAA5B,EAAwCC,MAAxC,EAAgDC,cAAhD,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAD,IAAAA,QAAQ,CAAC,CAAChB,aAAa,CAAC,KAAD,CAAd,CAAD,CAAR;AACH,GAJD,CAIC,OAAMoB,GAAN,EAAU;AACPJ,IAAAA,QAAQ,CAAChB,aAAa,CAAC,KAAD,CAAd,CAAR;AACH;AACJ,CATM;AAWP,eAAeM,iBAAf","sourcesContent":["import { activitiesApi } from \"../Api/api\";\nimport { setIsFetching } from \"./commonReducer\";\n\nconst SET_CURRENT_ACTIVITY = 'SET_CURRENT_ACTIVITY';\nconst SET_ACTIVITIES_DATA = 'SET_ACTIVITIES_DATA';\n\nlet initialState = {\n    activities: [],\n    currentActivity: null\n}\n\nconst activitiesReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_CURRENT_ACTIVITY: {\n            return { ...state, currentActivity: action.currentActivity }\n        }\n        case SET_ACTIVITIES_DATA: {\n            return { ...state, activities: action.activities }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const setCurrentActivity = (currentActivity) => ({\n    type: SET_CURRENT_ACTIVITY, currentActivity\n});\nexport const setActivitiesData = (activities) => ({\n    type: SET_ACTIVITIES_DATA, activities\n});\n\nexport const getActivities = (employeeId, userId, organizationId) => async (dispatch) => {\n    dispatch(setIsFetching(true));\n    try{\n        let response = await activitiesApi.getActivities(employeeId, userId, organizationId);\n        console.log(response);\n        dispatch([setIsFetching(false)]);\n    }catch(err){\n        dispatch(setIsFetching(false));\n    }\n}\n\nexport default activitiesReducer;"]},"metadata":{},"sourceType":"module"}