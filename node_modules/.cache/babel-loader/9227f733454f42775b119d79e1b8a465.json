{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dev/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/WEB/lxp/lxp-test/lxp/src/Components/Home/HomeContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Home from './Home';\nimport { getCourses } from '../../Redux/coursesReducer';\nimport { getActivities } from '../../Redux/activitiesReducer';\n\nconst HomeContainer = props => {\n  _s();\n\n  useEffect(() => {\n    props.getCourses(props.user.organizationId, props.page, props.take);\n    props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.isFetching && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 34\n    }, this), props.isAuth && /*#__PURE__*/_jsxDEV(Home, {\n      user: props.user,\n      courses: props.courses,\n      activities: props.activities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomeContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = HomeContainer;\n\nlet mapStateToProps = state => ({\n  isFetching: state.common.isFetching,\n  user: state.user.user,\n  isAuth: state.user.isAuth,\n  courses: state.courses.courses,\n  activities: state.activities.activities,\n  page: state.courses.page,\n  take: state.courses.take\n});\n\nexport default connect(mapStateToProps, {\n  getCourses,\n  getActivities\n})(HomeContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeContainer\");","map":{"version":3,"sources":["/home/dev/Рабочий стол/WEB/lxp/lxp-test/lxp/src/Components/Home/HomeContainer.jsx"],"names":["React","useEffect","useState","connect","Preloader","Home","getCourses","getActivities","HomeContainer","props","user","organizationId","page","take","employeeId","userId","isFetching","isAuth","courses","activities","mapStateToProps","state","common"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,aAAT,QAA8B,+BAA9B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7BR,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,KAAK,CAACH,UAAN,CAAiBG,KAAK,CAACC,IAAN,CAAWC,cAA5B,EAA4CF,KAAK,CAACG,IAAlD,EAAwDH,KAAK,CAACI,IAA9D;AACAJ,IAAAA,KAAK,CAACF,aAAN,CAAoBE,KAAK,CAACC,IAAN,CAAWI,UAA/B,EAA2CL,KAAK,CAACC,IAAN,CAAWK,MAAtD,EAA8DN,KAAK,CAACC,IAAN,CAAWC,cAAzE;AACH,GAHQ,EAGP,EAHO,CAAT;AAIA,sBACI;AAAA,eACKF,KAAK,CAACO,UAAN,iBAAoB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADzB,EAEKP,KAAK,CAACQ,MAAN,iBAAgB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAER,KAAK,CAACC,IAAlB;AACO,MAAA,OAAO,EAAED,KAAK,CAACS,OADtB;AAEO,MAAA,UAAU,EAAET,KAAK,CAACU;AAFzB;AAAA;AAAA;AAAA;AAAA,YAFrB;AAAA,kBADJ;AASH,CAdD;;GAAMX,a;;KAAAA,a;;AAgBN,IAAIY,eAAe,GAAIC,KAAD,KAAY;AAC9BL,EAAAA,UAAU,EAAEK,KAAK,CAACC,MAAN,CAAaN,UADK;AAE9BN,EAAAA,IAAI,EAAEW,KAAK,CAACX,IAAN,CAAWA,IAFa;AAG9BO,EAAAA,MAAM,EAAEI,KAAK,CAACX,IAAN,CAAWO,MAHW;AAI9BC,EAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcA,OAJO;AAK9BC,EAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,CAAiBA,UALC;AAM9BP,EAAAA,IAAI,EAAES,KAAK,CAACH,OAAN,CAAcN,IANU;AAO9BC,EAAAA,IAAI,EAAEQ,KAAK,CAACH,OAAN,CAAcL;AAPU,CAAZ,CAAtB;;AAUA,eAAeV,OAAO,CAACiB,eAAD,EAAkB;AACpCd,EAAAA,UADoC;AAEpCC,EAAAA;AAFoC,CAAlB,CAAP,CAGZC,aAHY,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from '../Common/Preloader/Preloader';\nimport Home from './Home';\nimport { getCourses } from '../../Redux/coursesReducer';\nimport { getActivities } from '../../Redux/activitiesReducer';\n\nconst HomeContainer = (props) => {\n    useEffect(()=>{\n        props.getCourses(props.user.organizationId, props.page, props.take);\n        props.getActivities(props.user.employeeId, props.user.userId, props.user.organizationId);\n    },[]);\n    return(\n        <>\n            {props.isFetching && <Preloader/>}\n            {props.isAuth && <Home user={props.user}\n                                    courses={props.courses}\n                                    activities={props.activities}/>}\n        </>\n        \n    );\n}\n\nlet mapStateToProps = (state) => ({\n    isFetching: state.common.isFetching,\n    user: state.user.user,\n    isAuth: state.user.isAuth,\n    courses: state.courses.courses,\n    activities: state.activities.activities,\n    page: state.courses.page,\n    take: state.courses.take\n});\n\nexport default connect(mapStateToProps, {\n    getCourses,\n    getActivities\n})(HomeContainer);"]},"metadata":{},"sourceType":"module"}